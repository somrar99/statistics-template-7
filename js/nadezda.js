dbQuery.use('riksdagsval-neo4j');

// –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ kommun
let electionResultsForWork = await dbQuery('MATCH (n:Partiresultat) RETURN n');



let grupperadElectionResultsForWork = {};

for (let item of electionResultsForWork) {
  const { kommun, parti, roster2018, roster2022 } = item;
  if (!grupperadElectionResultsForWork[kommun]) {
    grupperadElectionResultsForWork[kommun] = [];
  }
  grupperadElectionResultsForWork[kommun].push({ parti, roster2018, roster2022 });
}

// –û–ø—Ä–µ–¥–µ–ª–∏–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è + —Ñ–ª–∞–≥ —Å–º–µ–Ω—ã
let sammanstallning = Object.entries(grupperadElectionResultsForWork).map(([kommun, list]) => {
  let vinnare2018 = list.reduce((max, curr) => curr.roster2018 > max.roster2018 ? curr : max);
  let vinnare2022 = list.reduce((max, curr) => curr.roster2022 > max.roster2022 ? curr : max);

  const byttParti = vinnare2018.parti !== vinnare2022.parti;

  return {
    kommun,
    vinnare2018: vinnare2018.parti,
    roster2018: vinnare2018.roster2018,
    vinnare2022: vinnare2022.parti,
    roster2022: vinnare2022.roster2022,
    byte: byttParti ? "!!! Ja!!!" : "-"
  };
});

let antalByten = sammanstallning.filter(r => r.byte === "!!! Ja!!!").length;


addMdToPage("### Vinnande parti per kommun - med byte mellan 2018 och 2022");



tableFromData({
  data: sammanstallning.map(row => {
    const highlight = row.byte === " Ja";
    return {
      kommun: row.kommun,
      vinnare2018: row.vinnare2018,
      roster2018: row.roster2018,
      vinnare2022: row.vinnare2022,
      roster2022: row.roster2022,
      byte: row.byte
    };
  })
});




// –î–æ—Å—Ç–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≥–æ–¥–æ–≤ –∏ –ø–∞—Ä—Ç–∏–π
let years = [2018, 2022];
let partier = [...new Set(electionResultsForWork.map(x => x.parti))].sort();

// –°–æ–∑–¥–∞–µ–º –¥–≤–∞ –≤—ã–ø–∞–¥–∞—é—â–∏—Ö –º–µ–Ω—é
let year = addDropdown('V√§lj √•r', years, 2022);
let chosenParti = addDropdown('V√§lj parti', partier);

// 2. –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º—É–Ω, –≥–¥–µ –ø–∞—Ä—Ç–∏—è –ø–æ–±–µ–¥–∏–ª–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≥–æ–¥—É
let antalKommunerMedVinst = sammanstallning.filter(row =>
  (year == 2018 && row.vinnare2018 === chosenParti) ||
  (year == 2022 && row.vinnare2022 === chosenParti)
).length;

// –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ —á–∏—Å–ª–æ –≥–æ–ª–æ—Å–æ–≤ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ–¥
let totalVotes = s.sum(
  electionResultsForWork.map(x => year === 2018 ? +x.roster2018 : +x.roster2022)
);

// –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ —á–∏—Å–ª–æ –≥–æ–ª–æ—Å–æ–≤ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–∞—Ä—Ç–∏—é
let partyVotes = s.sum(
  electionResultsForWork
    .filter(x => x.parti === chosenParti)
    .map(x => year === 2018 ? +x.roster2018 : +x.roster2022)
);

// –°—á–∏—Ç–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç
let percent = ((partyVotes / totalVotes) * 100).toFixed(1);

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º
/*
addMdToPage(`### Partiet *${chosenParti}* √•r ${year} von i ${antalKommunerMedVinst} kommun`);
addMdToPage(`Totalt antal r√∂ster: **${partyVotes.toLocaleString('sv-SE')}** i landet f√∂r valt √•r. 
Andel av alla r√∂ster: **${percent}%**`);
*/
addToPage(`
  <div style="display: flex; justify-content: space-between; gap: 30px; align-items: flex-start;">
    
    <div style="flex: 1;">
      <h3>${chosenParti}, √•r ${year}</h3>
      <p>Partiet <strong>${chosenParti}</strong> vann i <strong>${antalKommunerMedVinst}</strong> kommuner.</p>
      <p>Totalt antal r√∂ster: <strong>${partyVotes.toLocaleString('sv-SE')}</strong> i landet f√∂r valt √•r.</p>
      <p>Andel av alla r√∂ster: <strong>${percent}%</strong></p>
    </div>

    <div id="pieChartContainer" style="flex: 1;"></div>

  </div>
`);
drawGoogleChart({
  type: 'PieChart',
  elementId: 'pieChartContainer',
  data: [
    ['Parti', 'R√∂ster'],
    [chosenParti, partyVotes],
    ['√ñvriga', totalVotes - partyVotes]
  ],
  options: {
    title: `Andel av r√∂ster, √•r ${year}`,
    height: 300,
    pieHole: 0.4
  }
});


let vansterPartier = ['Socialdemokraterna', 'V√§nsterpartiet', 'Milj√∂partiet', 'Centerpartiet'];
let hogerPartier = ['Moderaterna', 'Kristdemokraterna', 'Liberalerna', 'Sverigedemokraterna'];

// –°—É–º–º–∏—Ä—É–µ–º –ø–æ –±–ª–æ–∫–∞–º
let totalVanster2018 = electionResultsForWork
  .filter(x => vansterPartier.includes(x.parti))
  .reduce((sum, x) => sum + (+x.roster2018), 0);

let totalVanster2022 = electionResultsForWork
  .filter(x => vansterPartier.includes(x.parti))
  .reduce((sum, x) => sum + (+x.roster2022), 0);

let totalHoger2018 = electionResultsForWork
  .filter(x => hogerPartier.includes(x.parti))
  .reduce((sum, x) => sum + (+x.roster2018), 0);

let totalHoger2022 = electionResultsForWork
  .filter(x => hogerPartier.includes(x.parti))
  .reduce((sum, x) => sum + (+x.roster2022), 0);

// –û–±—â–∞—è —Å—É–º–º–∞ –≥–æ–ª–æ—Å–æ–≤ –ø–æ —Å—Ç—Ä–∞–Ω–µ
let total2018 = totalVanster2018 + totalHoger2018;
let total2022 = totalVanster2022 + totalHoger2022;

// –ü—Ä–æ—Ü–µ–Ω—Ç—ã
let percentVanster2018 = (totalVanster2018 / total2018 * 100).toFixed(1);
let percentVanster2022 = (totalVanster2022 / total2022 * 100).toFixed(1);
let percentHoger2018 = (totalHoger2018 / total2018 * 100).toFixed(1);
let percentHoger2022 = (totalHoger2022 / total2022 * 100).toFixed(1);

addMdToPage(`
### R√∂ster per block ‚Äì hela landet

#### üó≥Ô∏è √Ör 2018
- V√§nsterblocket: ${totalVanster2018.toLocaleString('sv-SE')} r√∂ster (${percentVanster2018}%)
- H√∂gerblocket: ${totalHoger2018.toLocaleString('sv-SE')} r√∂ster (${percentHoger2018}%)

#### üó≥Ô∏è √Ör 2022
- V√§nsterblocket: ${totalVanster2022.toLocaleString('sv-SE')} r√∂ster (${percentVanster2022}%)
- H√∂gerblocket: ${totalHoger2022.toLocaleString('sv-SE')} r√∂ster (${percentHoger2022}%)
`);

// –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∏–∞–≥—Ä–∞–º–º—ã
let blockData = [
  { √•r: '2018', V√§nster: totalVanster2018, H√∂ger: totalHoger2018 },
  { √•r: '2022', V√§nster: totalVanster2022, H√∂ger: totalHoger2022 }
];

// –í—ã–≤–æ–¥–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
addMdToPage(`### R√∂stf√∂rdelning per block (hela landet)`);

// –°—Ç—Ä–æ–∏–º –¥–∏–∞–≥—Ä–∞–º–º—É
drawGoogleChart({
  type: 'ColumnChart',
  data: makeChartFriendly(blockData, '√•r', 'V√§nster', 'H√∂ger'),
  options: {
    title: 'V√§nster- och h√∂gerblockets r√∂ster i hela landet (2018 vs 2022)',
    height: 500,
    legend: { position: 'top' },
    hAxis: {
      title: '√Ör',
      slantedText: true
    },
    vAxis: {
      title: 'Antal r√∂ster',
      format: '#'
    },
    chartArea: { left: 80, width: '80%' }
  }
});